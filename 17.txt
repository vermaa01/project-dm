Q1. 10M

fib <- numeric(20) 

fib[1] <- 0

fib[2] <- 1

for (i in 3:20) {
  fib[i] <- fib[i-1] + fib[i-2]
}

cat("The first 20 Fibonacci numbers are:\n")

print(fib)


Q2. 20M

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

data = {'Year':[2017]*12 + [2016]*12,
        'Month':[12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1],
        'Interest_Rate':[2.75,2.5,2.5,2.5,2.5,2.5,2.5,2.25,2.25,2.25,2,2,2,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75],
        'Unemployment_Rate':[5.3,5.3,5.3,5.3,5.4,5.6,5.5,5.5,5.5,5.6,5.7,5.9,6,5.9,5.8,6.1,6.2,6.1,6.1,6.1,5.9,6.2,6.2,6.1],
       'Stock_Index_Price':[1464,1394,1357,1293,1256,1254,1234,1195,1159,1167,1130,1075,1047,965,943,958,971,949,884,866,876,822,704,719]}

df = pd.DataFrame(data)

X = df[['Interest_Rate','Unemployment_Rate']]

y = df['Stock_Index_Price']

model = LinearRegression().fit(X,y)

print("Coefficients:", model.coef_, "Intercept:", model.intercept_)

plt.scatter(df['Interest_Rate'], df['Stock_Index_Price'])
plt.xlabel('Interest Rate')
plt.ylabel('Stock Index Price')
plt.title('Stock Index Price vs Interest Rate')
plt.show()

